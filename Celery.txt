luaU_deserialize                013F1F50    __cdecl
luaL_checklstring               013E8D10    __cdecl
lua_pushcclosure                013E7260    __cdecl
luaC_step                       013FB300    __cdecl
luaF_newcclosure                013FACE0    __cdecl
luaM_malloc                     013FEB80    __cdecl
luaC_link                       013FB250    __cdecl
luaB_wait                       0085D4E0    __cdecl
luaO_nilobject                  01FA8E60
lua_touserdata                  013E87E0    __cdecl
index2adr                       013E6480    __cdecl
lua_tolstring                   013E8390    __fastcall
tag_error                       013E94E0    __cdecl
xor_const                       02708ED0
luaV_tostring                   013FE7F0    __cdecl
luaV_tonumber                   013FE790    __cdecl
luaV_gettable_noindex           013FE600    __cdecl
luaV_gettable_noindex_opt       013FE5E0    __cdecl
lua_getfield_noindex            013E7900    __fastcall
luaS_newlstr                    013FC320    __stdcall
lua_typename                    013E88C0    __cdecl
luaT_typenames                  01FAA188
lua_type                        013E8880    __cdecl
luaL_typeerror                  013E9360    __cdecl
R_LUA_TNIL                      00000000
R_LUA_TBOOLEAN                  00000001
R_LUA_TVECTOR                   00000002
R_LUA_TNUMBER                   00000003
R_LUA_TLIGHTUSERDATA            00000004
R_LUA_TSTRING                   00000005
R_LUA_TTABLE                    00000006
R_LUA_TFUNCTION                 00000007
R_LUA_TTHREAD                   00000008
R_LUA_TUSERDATA                 00000009
getNamecallMethod               013E8A20    __cdecl
lua_rawvalue                    013E6560    __cdecl
deobfuscate_closure             013FE9B0    __cdecl
luaL_error                      013E8E10    __cdecl
luaL_where                      013E9460    __cdecl
lua_pushvfstring                013E7790    __cdecl
lua_concat                      013E66C0    __cdecl
lua_error                       013E67D0    __cdecl
lua_getstack                    013F3C60    __cdecl
lua_getinfo                     013F3AD0    __cdecl
lua_pushfstring                 013E7330    __cdecl
lua_pushlstring                 013E7450    __cdecl
luaD_reallocstack               013FB300    __cdecl
luaV_concat                     013FDC20    __cdecl
lua_getmetatable                013E6A50    __fastcall
lua_newthread                   013E6ED0    __cdecl
lua_pushinteger                 013E73A0    __cdecl
lua_getfield                    013E69A0    __fastcall
luaV_gettable_opt               013FE3A0    __cdecl
luaD_precall                    013F2A60    __cdecl
tryfuncTM                       013F2DD0    __cdecl
growCI                          013E9620    __cdecl
luaT_gettmbyobj                 013FE890    __cdecl
luaD_reallocCI                  013E98F0    __cdecl
luaD_throw                      013E9AE0    __cdecl
luaG_runerror                   013F39B0    __cdecl
luaM_realloc                    013FECD0    __cdecl
luaM_toobig                     013FEDE0    __cdecl
luaD_call                       013E9580    __cdecl
luaU_execute                    013F1F30    __cdecl
luaU_vm                         013EA520    __cdecl
luaU_test_vm                    013EDE70    __cdecl
f_call                          013E6430    __cdecl
lua_call                        013E65B0    __cdecl
lua_pcall                       013E7150    __cdecl
luaF_newproto                   013FADA0    __cdecl
Proto size                      00000054
Closure->isC                    00000006
Closure->func                   00000018
closure obfuscation             00000002
spawn                           00789C20    __cdecl
luaL_checktype                  013E8DB0    __cdecl
luaL_getmetafield               013E8F30    __cdecl
lua_settop                      013E8170    __fastcall
lua_setmetatable                013E7F00    __cdecl
luaL_argerror                   013E9360    __cdecl
lua_settable                    013E80F0    __cdecl
L->top                          00000010
L->base                         00000014
Table->is_readonly              0000000A
Table->sizearray                00000010
luaL_checkany                   013E8CA0    __cdecl
lua_rawequal                    013E7800    __cdecl
lua_pushboolean                 013E7210    __cdecl
lua_rawget                      013E7880    __cdecl
lua_rawset                      013E7A30    __cdecl
lua_rawgeti                     013E79B0    __cdecl
lua_rawseti                     013E7B00    __cdecl
lua_yield                       013E9D30    __cdecl
lua_xmove                       013E8930    __cdecl
lua_next                        013E6FE0    __cdecl
lua_pushnil                     013E74C0    __cdecl
getfunc                         013F4730    __cdecl
lua_pushvalue                   013E7720    __fastcall
lua_isnumber                    013E6D70    __cdecl
lua_tonumber                    013E84C0    __cdecl
lua_pushthread                  013E7650    __cdecl
lua_insert                      013E6C40    __cdecl
lua_iscfunction                 013E6D20    __cdecl
lua_setfenv                     013E7D70    __cdecl
lua_setfield                    013E7E50    __fastcall
lua_getfenv                     013E6900    __cdecl
(unlabeled)                     013E82B0    __cdecl
lua_newuserdata                 013E6F60    __cdecl
lua_createtable                 013E6760    __cdecl
lua_replace                     013E7C60    __cdecl
lua_objlen                      013E7070    __cdecl
luaL_ref                        013E91B0    __cdecl
